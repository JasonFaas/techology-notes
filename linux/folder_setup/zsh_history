aws ec2 describe-instances
aws ec2 help
aws ec2 start-instances --instance-ids <instance_ids>
aws ec2 stop-instances --instance-ids <instance_id>
aws help
aws s3 cp fromFile s3://toBucket/toFileName
aws s3 cp s3://fromBucket/fromFolder/ toFolder/ --recursive
aws s3 ls
aws s3 ls --recursive s3://bucket_name
aws s3 ls s3://bucket-name/
aws s3 ls s3://bucket-name/folder/
aws s3 sync myfolder s3://mybucket/myfolder --exclude *.tmp

break_noise script_name
brew install aws-iam-authenticator
brew install awscli
brew install stern
brew update
brew upgrade package_name

cat cert_file | openssl x509 -noout -enddate | sed -e 's/notAfter=//' # Certificate Age
cd ~/Code/
chmod 0600 ~/.ssh/priv_key # User only read-4 and write-2
curl wttr.in/Milton+KY
curl wttr.in/Santa+Clara
curl wttr.in/Xian

date -u +"%Y-%m-%d--%T-%Z" # YYYY-MM-DD--HH-MM-SS-UTC
date +"%s" # epoch time

echo "$?"

find ~/Code/techology-notes -iname '*md'
find ~/Code/techology-notes/ -name README.md

git push --set-upstream origin $(git rev-parse --abbrev-ref HEAD)
git reset --hard HEAD

mkdir -p ~/level_1/level_2/

pip freeze
pip install --upgrade pip
pip install --upgrade pip
pip install -r requirements.txt
pip install <library>
pip install awscli
printenv
printenv PWD
ps -ax
ps -ef
python3 --version
python3 -m venv ~/.venv/py3venv1  # Create virtual environment

say "Failed again, try again soon."
say "Good News, Everyone!"
set -e # next non-zero exit code will exit terminal
source ~/.venv/py3venv1/bin/activate  # Activate virtual environment
ssh -i <private_key_file> <user>@<ec2-instance-id>
ssh -p <port> <user>@<ip_address>
ssh <user>@<ip> "echo 'command_string';pwd;ls"
ssh-add -k ~/.ssh/id_rsa
ssh-add -l

vagrant global-status
vagrant halt
vagrant plugin install plugin_name
vagrant scp local_file_or_dir vm_id:path_on_vm
vagrant ssh
vagrant ssh -c "pwd"
vagrant up

which python3
whoami
